{"version":3,"sources":["components/Contact.js","components/data.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Contact","props","className","firstName","lastName","gender","phone","contacts","Contacts","id","useState","infoContact","setInfoContact","inputText","setInputText","useEffect","filterContacts","filter","toLowerCase","includes","value","onChange","event","target","placeholder","map","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAceA,MAZf,SAAiBC,GAEb,OACI,sBAAKC,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBD,EAAME,UAAY,IAAMF,EAAMG,WACrD,qBAAKF,UAAU,SAAf,SAAyBD,EAAMI,YAEnC,qBAAKH,UAAU,QAAf,SAAwBD,EAAMK,Y,cCqB3BC,EA/BE,CAAC,CACdJ,UAAW,uCACXC,SAAU,2EACVE,MAAO,gBACPD,OAAQ,QACT,CACCF,UAAW,iCACXC,SAAU,+DACVE,MAAO,gBACPD,OAAQ,UACT,CACCF,UAAW,yDACXC,SAAU,mDACVE,MAAO,iBACR,CACCH,UAAW,iCACXC,SAAU,mDACVE,MAAO,gBACPD,OAAQ,UACT,CACCF,UAAW,uCACXC,SAAU,yDACVE,MAAO,gBACPD,OAAQ,QACT,CACCF,UAAW,uCACXC,SAAU,6CACVE,MAAO,gBACPD,OAAQ,SCIGG,MA3Bf,WACI,IAAIC,EAAK,EACT,EAAsCC,mBAASH,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAVAC,qBAAU,WACN,IAAMC,EAAiBT,EAASU,QAAO,SAAChB,GACpC,OACIA,EAAMG,SAASc,cAAcC,SAASN,EAAUK,gBAChDjB,EAAME,UAAUe,cAAcC,SAASN,EAAUK,gBACjDjB,EAAMK,MAAMa,SAASN,MAG7BD,EAAeI,KACjB,CAACH,IAEC,qBAAKX,UAAU,YAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,iBAAiBkB,MAAOP,EAAWQ,SAhBhE,SAA4BC,GACxBR,EAAaQ,EAAMC,OAAOH,QAegEI,YAAW,WAC5Fb,EAAYc,KAAK,SAAAxB,GAAK,OAAE,wBAAC,EAAD,2BAAaA,GAAb,IAAoByB,IAAOjB,gBCZrDkB,MARf,WACE,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IADF,QCIW0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7bbe611.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Contact(props){\r\n\r\n    return(\r\n        <div className=\"contact\">\r\n            <div className=\"contact-all\">\r\n                <div className=\"name\">{props.firstName + \" \" + props.lastName}</div>\r\n                <div className=\"gender\">{props.gender}</div>\r\n            </div>\r\n            <div className=\"phone\">{props.phone}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Contact;","const contacts = [{\r\n    firstName: \"Барней\",\r\n    lastName: \"Стинсовський\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Робін\",\r\n    lastName: \"Щербатська\",\r\n    phone: \"+380931460123\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Анонімний\",\r\n    lastName: \"Анонімус\",\r\n    phone: \"+380666666666\",\r\n}, {\r\n    firstName: \"Лілія\",\r\n    lastName: \"Олдровна\",\r\n    phone: \"+380504691254\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Маршен\",\r\n    lastName: \"Еріксонян\",\r\n    phone: \"+380739432123\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Теодор\",\r\n    lastName: \"Мотсбес\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}];\r\n\r\nexport default contacts;","import React, {useState, useEffect} from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport contacts from \"./data\";\r\n\r\n\r\nfunction Contacts(){\r\n    let id = 0;\r\n    const [infoContact, setInfoContact] = useState(contacts);\r\n    const [inputText, setInputText] = useState(``);\r\n    function handleSearchChange(event){ \r\n        setInputText(event.target.value);\r\n    };\r\n    useEffect(()=>{\r\n        const filterContacts = contacts.filter((props) => {\r\n            return (\r\n                props.lastName.toLowerCase().includes(inputText.toLowerCase()) ||\r\n                props.firstName.toLowerCase().includes(inputText.toLowerCase()) ||\r\n                props.phone.includes(inputText)\r\n             );\r\n        });\r\n        setInfoContact(filterContacts);\r\n    },[inputText]);\r\n    return (\r\n        <div className=\"block-all\">\r\n            <div className=\"search\">\r\n                <input className=\"search-contact\" value={inputText} onChange={handleSearchChange} placeholder={`Search`}></input>\r\n                {infoContact.map((props=><Contact {...props} key = {id++}/>))}               \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n","import './App.css';\nimport React from \"react\";\nimport Contact from './components/Contact';\nimport Contacts from './components/Contacts';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Contacts/>;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}